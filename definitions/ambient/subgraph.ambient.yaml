specVersion: 1.0.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Ambient
    network: {{network}}
    source:
      address: "{{Dex}}"
      abi: AmbientDex
      startBlock: {{startBlock}}
    context:
      ambientQuery:
        type: String
        data: "{{Query}}"
      snapshotBatch:
        type: Int
        data: {{snapshotBatch}} 
      startSnapshotBlock:
        type: Int
        data: {{startSnapshotBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Position
        - PositionSnapshot
        - PositionChange
        - Investment
        - Protocol
        - Holder
      abis:
        - name: AmbientDex
          file: ./abis/Ambient/AmbientDex.json
        - name: AmbientQuery
          file: ./abis/Ambient/AmbientQuery.json
      eventHandlers:
        - event: CrocWarmCmd(bytes,int128,int128)
          handler: handleWarmCmd
        - event: CrocColdCmd(bytes)
          handler: handleColdCmd
        - event: CrocMicroBurnAmbient(bytes,bytes)
          handler: handleMicroBurnAmbient
        - event: CrocMicroMintAmbient(bytes,bytes)
          handler: handleMicroMintAmbient
        - event: CrocMicroBurnRange(bytes,bytes)
          handler: handleMicroBurnRange
        - event: CrocMicroMintRange(bytes,bytes)
          handler: handleMicroMintRange
        # - event: CrocKnockoutCmd(bytes,bytes)
        #   handler: handleCrocKnockout
      file: ./src/projects/ambient/index.ts
      blockHandlers:
        - handler: handleBlock
          filter:
            kind: polling
            every: {{polling}}
  # - kind: ethereum
  #   name: WarmPath
  #   network: {{network}}
  #   source:
  #     abi: WarmPath
  #     address: "{{WarmPath}}"
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Position
  #       - PositionSnapshot
  #       - PositionChange
  #       - Investment
  #       - Protocol
  #       - Holder
  #     abis:
  #       - name: WarmPath
  #         file: ./abis/Ambient/WarmPath.json
  #     callHandlers:
  #       - function: userCmd(bytes)
  #         handler: handleWarmPathCall
  #     eventHandlers:
  #       - event: CrocWarmCmd(bytes,int128,int128)
  #         handler: handleWarmPathEvent
  #     file: ./src/projects/ambient/index.ts
  # - kind: ethereum
  #   name: MicroPaths
  #   network: {{network}}
  #   source:
  #     abi: MicroPaths
  #     address: "{{MicroPaths}}"
  #     startBlock: {{startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Position
  #       - PositionSnapshot
  #       - PositionChange
  #       - Investment
  #       - Protocol
  #       - Holder
  #     abis:
  #       - name: MicroPaths
  #         file: ./abis/Ambient/MicroPath.json
  #     callHandlers:
  #       - function: mintRange(uint128,int24,uint128,uint128,uint64,uint64,int24,int24,uint128,bytes32)
  #         handler: handleMintRangeCall
  #       - function: mintAmbient(uint128,uint128,uint128,uint64,uint64,uint128,bytes32)
  #         handler: handleMintAmbientCall
  #       - function: burnRange(uint128,int24,uint128,uint128,uint64,uint64,int24,int24,uint128,bytes32)
  #         handler: handleBurnRangeCall
  #       - function: burnAmbient(uint128,uint128,uint128,uint64,uint64,uint128,bytes32)
  #         handler: handleBurnAmbientCall
  #     eventHandlers:
  #       - event: CrocMicroMintAmbient(bytes,bytes)
  #         handler: handleMintAmbientEvent
  #       - event: CrocMicroMintRange(bytes,bytes)
  #         handler: handleMintRangeEvent
  #       - event: CrocMicroBurnAmbient(bytes,bytes)
  #         handler: handleBurnAmbientEvent
  #       - event: CrocMicroBurnRange(bytes,bytes)
  #         handler: handleBurnRangeEvent
  #     file: ./src/projects/ambient/index.ts
    
  